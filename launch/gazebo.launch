<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="model" default="$(find r2d2_slam)/urdf/robot.urdf"/>
  <arg name="world" default="$(find r2d2_slam)/world/maze.world" />

    <env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find r2d2_slam)/models"/>
  <env name="GAZEBO_RESOURCE_PATH" value="${GAZEBO_RESOURCE_PATH}:$(find r2d2_slam)/models"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world)" />
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <param name="robot_description" command="$(find xacro)/xacro $(arg model)" />

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
        args="-z 1.0 -unpause -urdf -model robot -param robot_description" respawn="false" output="screen" />

  <node pkg="robot_state_publisher" type="robot_state_publisher"  name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="40.0" />
  </node>

  <arg name="geotiff_map_file_path" default="$(find hector_geotiff)/maps"/>
  
  <include file="$(find hector_mapping)/launch/mapping_default.launch">
    <arg name="base_frame" value="base_link"/>
    <arg name="odom_frame" value="odom"/>
  </include>

  <include file="$(find hector_geotiff)/launch/geotiff_mapper.launch">
    <arg name="trajectory_source_frame_name" value="scanmatcher_frame"/>
    <arg name="map_file_path" value="$(arg geotiff_map_file_path)"/>
  </include>
  
  <!--<node pkg="tf" type="static_transform_publisher" name="trans_pub" 
                      args="0 0 0 0 0 0 1 odom base_link 100" />-->
  

</launch>